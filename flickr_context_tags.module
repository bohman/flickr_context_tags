<?php
// $Id$

function flickr_context_tags_menu() {
  $items = array();

  $items['admin/settings/flickr/context_tags'] = array(
    'title' => 'Context tags',
    'description' => 'Settings for the contextual flickr search',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('flickr_context_tags_settings'),
    'file' => 'flickr_context_tags_admin.inc.php',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implementation of hook_block().
 */
function flickr_context_tags_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    // List our blocks
    case 'list':
      $blocks = array();
      $blocks[0] = array(
        'info' => t('From Flickr'),
        'cache' => BLOCK_CACHE_PER_PAGE,
      );
      return $blocks;
    break;
    // View the block
    case 'view':
      $block = array();
      switch ($delta) {
        case 0:
          if (arg(0) == 'node' && is_numeric(arg(1))) {
            $block['subject'] = t('From Flickr');

            $node = node_load(arg(1));
            $ex = flickr_context_tags_get_photos($node);

            $out = '';

            if (!empty($ex)) {
              foreach ($ex as $photo) {
                $out .= l(flickr_img($photo, 's'), flickr_photo_page_url($photo['owner'], $photo['id']) , array(
                  'html' => TRUE,
                ));
              }
            }
            
            $mtags = flickr_context_tags_node_machine_tags($node);
            $tag_inputs = array();
            foreach ($mtags as $tag) {
              $tag_inputs[] = '<input class="flickr-machine-tag select-all" value="' . $tag . '" /><br />';
            }
            $out .= '<p>' . t('Tag your pictures with !tag ...to make them show up here', array(
              '!tag'=> join(t('or '), $tag_inputs),
            )) . '</p>';

            $block['content'] = $out;
          }
        break;
      }
      return $block;
    break;
  }
}

function _flickr_context_tags_machine($ns, $name, $value) {
  return $ns . ':' . $name . '=' . $value;
}

function flickr_context_tags_flickr_node_machine_tags_alter(&$tag_data, $node, $ns) {
  $tag_data[$ns]['node'] = $node->nid;
  foreach ($node->taxonomy as $tid => $term) {
    $tag_data[$ns]['is'] = mb_strtolower($term->name);
  }
}

function flickr_context_tags_node_machine_tag($node) {
  return _flickr_context_tags_machine(variable_get('flickr_context_tags_mech_namespace', ''),
    'node', $node->nid);
}


/**
 * Gets a list of machine tags that can be used to associate a photo with a node
 *
 * @return array(string) An array of tags
 **/
function flickr_context_tags_node_machine_tags($node) {
  $tag_data = array();
  $ns = variable_get('flickr_context_tags_mech_namespace', '');
  drupal_alter('flickr_node_machine_tags', $tag_data, $node, $ns);

  $tags = array();
  foreach ($tag_data as $ns => $tag) {
    foreach ($tag as $name => $value) {
      $tags[] = _flickr_context_tags_machine($ns, $name, $value);
    }
  }

  return $tags;
}

function flickr_context_tags_get_photos($node) {
  // Get photos added through machine tags
  $tags = flickr_context_tags_node_machine_tags($node);
  $args = flickr_tag_request_args($tags, 'any');
  $explicit_photos = flickr_photos_search(NULL, 1, $args);
  
  // Search by title
  $args = array('text' => mb_strtolower($node->title));
  if (module_exists('simple_geo')) {
    if (isset($node->simple_geo_position)) {
      $ll = split(' ', $node->simple_geo_position);
      $res = flickr_request('flickr.places.findByLatLon', array(
        'lat' => $ll[0],
        'lon' => $ll[1],
        'accuracy' => 11, //City-level
      ));
      $place = $res['places']['place'];
      if (!empty($place)) {
        $place = $place[0];
        $args['place_id'] = $place['place_id'];
      }
      else {
        $args['lat'] = $ll[0];
        $args['lon'] = $ll[1];
      }
    }
  }
  $text_photos = flickr_photos_search(NULL, 1, $args);
  
  return array_merge($explicit_photos['photo'], $text_photos['photo']);
}

function flickr_context_tags_get_related($node) {
  $tags = array();
  $tags[] = mb_strtolower($node->title);
  foreach ($node->taxonomy as $tid => $term) {
    $tags[] = mb_strtolower($term->name);
  }
  return $tags;
}